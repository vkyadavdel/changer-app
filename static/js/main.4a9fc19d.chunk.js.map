{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","defaultProps","aboutText","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","components_Navbar","body","components_Alert","components_TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.4a9fc19d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n             */}\r\n             <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n             */}\r\n             {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a> */}\r\n          </li>\r\n          </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title:\"set title here\",\r\n    aboutText:\"About\"\r\n}\r\nexport default Navbar\r\n","import React,{useState} from 'react'\r\n\r\nconst TextForm = (props) => {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\"+ text)\r\n        let newText=text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert('Converted to uppercase','success')\r\n    }\r\n    const handleLoClick=()=>{\r\n        // console.log(\"Uppercase was clicked\"+ text)\r\n        let newText=text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert('Converted to lowercase','success')\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"handle on change\")\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const handleClear=()=>{\r\n      let newText=\"\"\r\n      setText(newText)\r\n    }\r\n    const handleCopy=()=>{\r\n      var text=document.getElementById('myBox')\r\n      text.select();\r\n      // text.setSelectionRange(0,9999)\r\n      navigator.clipboard.writeText(text.value)\r\n      props.showAlert('Copied to clipboard','success')\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n      let newText=text.split(/[ ]+/)\r\n      setText(newText.join(\" \"))\r\n      props.showAlert('Extra spaces has been removed','success')\r\n    }\r\n  const [text,setText]=useState('')\r\n//   setText(\"Enter your text here\")\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange}\r\n   style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}\r\n   id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convet to UpperCase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convet to LowerCase</button>\r\n<button className='btn btn-primary mx-2' onClick={handleCopy}>Copy your text</button>\r\n<button className='btn btn-primary mx-2' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n<button className='btn btn-primary mx-2' onClick={handleClear}>Clear All Text</button>\r\n    </div>\r\n    <div className='container my-3' style={{color:props.mode==='dark'?'white':'black'}} >\r\n        <h1>Your Text Summary</h1>\r\n        <p> {text.split(\" \").length-1} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length-0.008} minutes will be Required to read this</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:'Enter some text to preview'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  {capitalize(props.alert.type)}: {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css'\r\nimport React, { useState } from 'react'\r\nimport Navbar from './components/Navbar'\r\nimport TextForm from './components/TextForm'\r\nimport Alert from './components/Alert'\r\n// import About from './components/About'\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Route,\r\n//   Routes,\r\n// } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  const [mode,setMode]=useState('light')\r\n  const [alert,setAlert]=useState(null)\r\n  const showAlert=(message,type)=>{\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    } \r\n    ) \r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 1400);    \r\n  }\r\n  const toggleMode=()=>{\r\n    if(mode==='light'){\r\n      setMode('dark')\r\n      document.body.style.backgroundColor='black'\r\n      showAlert('Dark mode has been enabled','success')\r\n    }\r\n    else{\r\n      setMode('light')\r\n      document.body.style.backgroundColor='white'\r\n      showAlert('Light mode has been enabled','success')\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Router> */}\r\n    <Navbar title=\"Changer\" mode={mode} toggleMode={toggleMode}/>\r\n    <Alert alert={alert}/>\r\n    <div className=\"container my-3\">\r\n    {/* <Routes> */}\r\n            {/* <Route exact path=\"/about\" element={<About/>} > */}\r\n\r\n            {/* </Route> */}\r\n\r\n            {/* <Route exact path=\"/\" element={ */}\r\n            <TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/>\r\n\r\n            {/* </Route>\r\n      </Routes> */}\r\n\r\n    </div>\r\n    {/* </Router> */}\r\n    </>\r\n  ) \r\n}\r\n \r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}